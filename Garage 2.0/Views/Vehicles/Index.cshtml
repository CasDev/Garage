@model PagedList.IPagedList<Garage.Models.Vehicle>
@using PagedList.Mvc;

@{
    ViewBag.Title = "List of Vehicles";

    string SearchUrl = "Vehicles/";
    if (ViewBag.RegistrationParm != null)
    {
        string RegistrationParm = ViewBag.RegistrationParm;
        SearchUrl += "?sortOrder=" + RegistrationParm;

        if (ViewBag.CurrentFilter != null)
        {
            string CurrentFilter = ViewBag.CurrentFilter;
            SearchUrl += "&currentFilter=" + CurrentFilter;
        }
    }
    else if (ViewBag.CurrentFilter != null)
    {
        string CurrentFilter = ViewBag.CurrentFilter;
        SearchUrl += "?currentFilter=" + CurrentFilter;
    }
}

<h2>Parked vehicles</h2>

<p>
    @Html.ActionLink("Park Vehicle", "Park")<br />
    @Html.ActionLink("See History", "Historic")
</p>

<form action="@Url.Content("~/" + SearchUrl)">
    <table class="search">
        <tr>
            <td>
                Find by search: 
            </td>
            <td>
                @Html.TextBox("searchString", null, new { @class = "form-control" } )
            </td>
            <td>
                <input type="submit" value="Search" />
            </td>
        </tr>
        @if (ViewBag.Message != null)
        {
            <tr>
                <td></td>
                <td>
                    <p class="warning">
                        @ViewBag.Message
                    </p>
                </td>
            </tr>
        }
        </table>
</form>
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Registration", "Index", new { page = Model.PageNumber, sortOrder = ViewBag.RegistrationParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Vehicle Type", "Index", new { page = Model.PageNumber, sortOrder = ViewBag.VehicleTypeParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Vehicle Brand", "Index", new { page = Model.PageNumber, sortOrder = ViewBag.VehicleBrandParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Color", "Index", new { page = Model.PageNumber, sortOrder = ViewBag.ColorParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Parked Since", "Index", new { page = Model.PageNumber, sortOrder = ViewBag.ParkingTimeParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            Price Per Hour
        </th>

        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Registration)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.VehicleType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.VehicleBrand)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Color)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ParkingTime)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.PricePerHour)
            </td>

            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Check Out", "CheckOut", new { id = item.Id })
            </td>
        </tr>
    }

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }),
    new PagedListRenderOptions() { DisplayLinkToFirstPage = PagedListDisplayMode.Always, DisplayLinkToLastPage = PagedListDisplayMode.Always })